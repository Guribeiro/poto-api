generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id         String       @id @default(uuid())
  full_name  String
  email      String       @unique
  password   String
  username   String?
  created_at DateTime     @default(now())
  updated_at DateTime     @default(now())
  address_id String?
  avatar     String?
  address    Addresses?   @relation(fields: [address_id], references: [id])
  userTokens UserTokens[]
  posts      Posts[]
  likes      Likes[]
  comments   Comments[]

  @@map("users")
}

model Addresses {
  id         String   @id @default(uuid())
  cep        String
  complement String?
  street     String
  district   String
  state      String
  city       String
  country    String
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  users      Users[]

  @@map("addresses")
}

model UserTokens {
  id            String   @id @default(uuid())
  refresh_token String
  user_id       String
  expires_date  DateTime
  created_at    DateTime @default(now())
  user          Users    @relation(fields: [user_id], references: [id])

  @@map("user_tokens")
}

model Posts {
  id         String   @id @default(uuid())
  user_id    String
  user       Users    @relation(fields: [user_id], references: [id])
  subtitle   String?
  photo      String
  latitude   Float?
  longitude  Float?
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  likes      Likes[]
  comments   Comments[]

  @@map("posts")
}

model Likes {
  id         String   @id @default(uuid())
  user_id    String
  user       Users    @relation(fields: [user_id], references: [id])
  post_id    String
  post       Posts    @relation(fields: [post_id], references: [id])
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
}

model Comments {
  id         String   @id @default(uuid())
  content    String
  user_id    String
  user       Users    @relation(fields: [user_id], references: [id])
  post_id    String
  post       Posts    @relation(fields: [post_id], references: [id])
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
}
